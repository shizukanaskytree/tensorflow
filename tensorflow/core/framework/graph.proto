syntax = "proto3";

package tensorflow;
option cc_enable_arenas = true;
option java_outer_classname = "GraphProtos";
option java_multiple_files = true;
option java_package = "org.tensorflow.framework";
option go_package = "github.com/tensorflow/tensorflow/tensorflow/go/core/framework";
import "tensorflow/core/framework/node_def.proto";
import "tensorflow/core/framework/function.proto";
import "tensorflow/core/framework/versions.proto";

// Represents the graph of operations
message GraphDef {
  repeated NodeDef node = 1;
  // 1.
  // QQQ. 如何写 C++ 遍历 node 呢?
  // AAA. 参考: ConvertGraphDefToGraph, 和 class GraphConstructor
  // tensorflow/core/graph/graph_constructor.cc

  // Compatibility versions of the graph.  See core/public/version.h for version
  // history.  The GraphDef version is distinct from the TensorFlow version, and
  // each release of TensorFlow will support a range of GraphDef versions.
  VersionDef versions = 4;

  // Deprecated single version field; use versions above instead.  Since all
  // GraphDef changes before "versions" was introduced were forward
  // compatible, this field is entirely ignored.
  int32 version = 3 [deprecated = true];

  // ===================
  // 注意: 这一项通常都为空
  // ===================
  // EXPERIMENTAL. DO NOT USE OR DEPEND ON THIS YET.
  //
  // "library" provides user-defined functions.
  //
  // Naming:
  //   * library.function.name are in a flat namespace.
  //     NOTE: We may need to change it to be hierarchical to support
  //     different orgs. E.g.,
  //     { "/google/nn", { ... }},
  //     { "/google/vision", { ... }}
  //     { "/org_foo/module_bar", { ... }}
  //     map<string, FunctionDefLib> named_lib;
  //   * If node[i].op is the name of one function in "library",
  //     node[i] is deemed as a function call. Otherwise, node[i].op
  //     must be a primitive operation supported by the runtime.
  //
  //
  // Function call semantics:
  //
  //   * The callee may start execution as soon as some of its inputs
  //     are ready. The caller may want to use Tuple() mechanism to
  //     ensure all inputs are ready in the same time.
  //
  //   * The consumer of return values may start executing as soon as
  //     the return values the consumer depends on are ready.  The
  //     consumer may want to use Tuple() mechanism to ensure the
  //     consumer does not start until all return values of the callee
  //     function are ready.
  FunctionDefLibrary library = 2;
  // 1.
  // message FunctionDefLibrary 数据结构
  // tensorflow/core/framework/function.proto:14:message FunctionDefLibrary
  // - function: repeated FunctionDef
  // - gradient: repeated GradientDef

  // 2.
  // FunctionDef 数据结构
  // tensorflow/core/framework/function.proto
  // - signature: OpDef
  //   The definition of the function's name, arguments, return values, attrs etc.
  // - attr: map<string, AttrValue> attr
  //   Attributes specific to this function definition.
  // - node_def: repeated NodeDef
  //   In both of the following fields, there is the need to specify an
  //   output that is used as either the input to another node (in
  //   `node_def`) or as a return value of the function (in `ret`).
  // - ret: map<string, string>
  //   A mapping from the output arg names from `signature` to the
  //   outputs from `node_def` that should be returned by the function.
  // - control_ret: map<string, string>
  //   A mapping from control output names from `signature` to node names in
  //   `node_def` which should be control outputs of this function.

  // 3.
  // OpDef 数据结构
  // tensorflow/core/framework/op_def.proto
};
// GraphDef 数据结构
// - node: repeated NodeDef
// - versions: VersionDef
// - library: FunctionDefLibrary # EXPERIMENTAL. DO NOT USE OR DEPEND ON THIS YET.
//   注意: 这一项通常都为空
